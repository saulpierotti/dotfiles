#############################################################################
# Saul i3gaps config
#############################################################################

# ------------------------ GENERAL -------------------------------
# Use the Windows key as $mod
set $mod Mod4
# Font
font pango:Noto Sans 10
# Ubuntu-like maouse behaviour
focus_follows_mouse yes
popup_during_fullscreen smart

# ------------------------- GAPPS -------------------------------
# The colored border around a window
for_window [class="^.*"] border pixel 3
# gapps among windows
gaps inner 10
# gapps to the edge of the screen
gaps outer 0

# --------------------------- COLORS  ---------------------------
set $fg-color #0C73C2
set $bg-color #1B1D1E
set $bg2-color #505354
set $contrast-color #F92672


# class                  border            backgr.            text            indicator        child_border
client.focused           $bg-color         $fg-color          $bg-color       $fg-color        $fg-color
client.focused_inactive  $bg-color         $bg2-color         $bg-color       $bg2-color       $bg2-color
client.unfocused         $bg-color         $bg-color          $bg2-color      $bg-color        $bg-color
client.urgent            $contrast-color   $contrast-color    $bg-color       $contrast-color  $contrast-color

# ------------------------- WORKSPACES ------------------------
# primary screen workspaces
set $ws1 "1: "
set $ws2 "2"
set $ws3 "3: "
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9: "
set $ws10 "10: "
# secondary screen
set $wse1 "e1: "
# force workspace on specific screens
workspace $ws1  output primary
workspace $ws2  output primary
workspace $ws3  output primary
workspace $ws4  output primary
workspace $ws5  output primary
workspace $ws6  output primary
workspace $ws7  output primary
workspace $ws8  output primary
workspace $ws9  output primary
workspace $ws10 output primary
workspace $wse1 output secondary
# force a window on a named workspace
assign [class="firefox"] $ws3
assign [class="Timeshift-gtk"] $ws10
assign [class="Back In Time"] $ws10
assign [class="Grsync"] $ws10
assign [class="Google-chrome"] $ws1
assign [class="Bitwarden"] $ws9
# spotify is problematic, move not assign
for_window [class="Spotify"] move to workspace $ws8

# -------------------- WORKSPACE ASSIGNMENTS  -------------------
# by APPLICATION (WM_CLASS)
# Note: class is typically useful for applying custom settings to
#       to entire applications, including child windows. If this
#       isn't want you want see the ROLE section, below.
# Tip: To find out what these values might be run:
#       xprop | grep -i 'class'
for_window [class="xpad"]                               floating enable
for_window [class="fiji-Main"]                          floating enable
for_window [class="Toplevel"]                           floating enable
for_window [class="Org.gnome.Nautilus"]                 floating enable
for_window [class="GParted"]                            floating enable
for_window [class="Skype"]                              floating enable
for_window [class="Galculator"]                         floating enable
# by ROLE (WM_WINDOW_ROLE)
# Note: window_role is Typically useful for effecting child windows
#       such as instant messaging converstations, email composition
#       windows, etc.
# Tip: To find out what these values might be run:
#       xprop | grep -i 'role'#
for_window [window_role="conversation"]                 floating enable
for_window [window_role="pop-up"]                       floating enable
for_window [window_role="bubble"]                       floating enable 
for_window [window_role="task_dialog"]                  floating enable
for_window [window_role="Preferences"]                  floating enable
for_window [window_role="Popup"]                        floating enable
# by TYPE
for_window [window_type="dialog"]                       floating enable 
for_window [window_type="menu"]                         floating enable
for_window [window_type="notification"]                 floating enable
#firefox popup windows
for_window [window_role="browser"]                      floating disable
# by WM_NAME
for_window [title="Delete entry"]                       floating enable # jabref
for_window [title="Select entry type"]                  floating enable # jabref
for_window [title="Error"]                              floating enable # jabref

# ------------------------- AUTOSTART -------------------------
# set screen resolution to single monitor mode
exec --no-startup-id /home/saul/.screenlayout/single_monitor.sh
# desktop compositor
exec --no-startup-id picom
# notification system
exec --no-startup-id twmnd
# status bar
exec_always --no-startup-id .config/polybar/launch.sh &
# polkit manages authentication for GUI apps
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# lockscreen
# exec --no-startup-id light-locker --late-locking --lock-after-screensaver=10
exec --no-startup-id xautolock -locker slock -time 10 -corners 0+0- -cornerdelay 1 -cornerredelay 60
# Restore GNOME's settings
exec --no-startup-id /usr/libexec/gnome-settings-daemon-localeexec
# Fix a bug in gnome-settings-daemon: http://feeding.cloud.geek.nz/posts/creating-a-modern-tiling-desktop-environment-using-i3/
exec --no-startup-id dconf write /org/gnome/settings-daemon/plugins/cursor/active false
# desktop widget
# kill and reload is needed when playing with screen resolutions
exec_always --no-startup-id killall conky; conky -d &
# launches prime-offload when needed by optimus-manager
# this is needed since optimus-manager does not run prime-offload after screen unlock
# by forcing a reload of i3 I can run prime-offload
exec_always --no-startup-id prime_offload_hack.sh &
# reset the status of redshift from the last login
exec_always --no-startup-id source ~/.config/polybar/scripts/env.sh && ~/.config/polybar/scripts/redshift.sh restore
# remap the right menu key to the windows key, and disable the autorepeat (the xset part)
exec --no-startup-id xmodmap -e 'keycode 135 = Super_R' && xset -r 135

# ---------------------------- TRAY --------------------------
# gpu manager (switch nvidia/intel)
exec --no-startup-id optimus-manager-qt
# usb manager
exec --no-startup-id udiskie -t
# bluetooth manager
exec --no-startup-id blueman-applet
# network manager
exec --no-startup-id nm-applet

# ----------------- SAUL KEYBOARD SHORTCUTS  -------------------
# audio
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
# backlight
bindsym XF86MonBrightnessUp exec --no-startup-id light -A 5
bindsym XF86MonBrightnessDown exec --no-startup-id light -U 5
bindsym Shift+XF86AudioRaiseVolume exec --no-startup-id light -A 5
bindsym Shift+XF86AudioLowerVolume exec --no-startup-id light -U 5
bindsym Shift+XF86AudioMute exec source ~/.config/polybar/scripts/env.sh && ~/.config/polybar/scripts/redshift.sh toggle
# poweroff
bindsym XF86PowerOff exec --no-startup-id ~/.scripts/poweroff.sh
bindsym Scroll_Lock exec --no-startup-id ~/.scripts/poweroff.sh
# Gui software
bindsym Print exec gnome-screenshot -a -i
bindsym XF86Calculator exec galculator
bindsym $mod+Shift+f exec firefox
bindsym $mod+Shift+i exec firefox --private-window
bindsym $mod+Shift+g exec google-chrome-stable

# ------------ DEFAULT KEYBOARD SHORTCUTS  ---------------------
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
# start a terminal
bindsym $mod+Return exec i3-sensible-terminal -T Terminal
# kill focused window
bindsym $mod+Shift+q kill
# start the program launcher
bindsym $mod+d exec rofi -show
# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right===
# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right
# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
# split in horizontal orientation
bindsym $mod+h split h
# split in vertical orientation
bindsym $mod+v split v
# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
# toggle tiling / floating
bindsym $mod+Shift+t floating toggle
# change focus between tiling / floating windows
bindsym $mod+t focus mode_toggle
# focus the parent container
bindsym $mod+a focus parent
# switch to workspace
bindsym $mod+1     workspace $ws1
bindsym $mod+2     workspace $ws2
bindsym $mod+3     workspace $ws3
bindsym $mod+4     workspace $ws4
bindsym $mod+5     workspace $ws5
bindsym $mod+6     workspace $ws6
bindsym $mod+7     workspace $ws7
bindsym $mod+8     workspace $ws8
bindsym $mod+9     workspace $ws9
bindsym $mod+0     workspace $ws10
bindsym $mod+minus workspace $wse1
# move focused container to workspace
bindsym $mod+Shift+1     move container to workspace $ws1
bindsym $mod+Shift+2     move container to workspace $ws2
bindsym $mod+Shift+3     move container to workspace $ws3
bindsym $mod+Shift+4     move container to workspace $ws4
bindsym $mod+Shift+5     move container to workspace $ws5
bindsym $mod+Shift+6     move container to workspace $ws6
bindsym $mod+Shift+7     move container to workspace $ws7
bindsym $mod+Shift+8     move container to workspace $ws8
bindsym $mod+Shift+9     move container to workspace $ws9
bindsym $mod+Shift+0     move container to workspace $ws10
bindsym $mod+Shift+minus move container to workspace $wse1
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"
# toggle workspace focus
bindsym $mod+b workspace back_and_forth
# toggle screen for current workspace
bindsym $mod+x move workspace to output righ
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
