/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for the codon cluster
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Author: Saul Pierotti
Mail: saul@ebi.ac.uk
Last edited: April 12th 2022
----------------------------------------------------------------------------------------
*/

// resume automatically
resume = true

conda {
    // use the faster micromamba solver instead of conda
    useMicromamba = true

    // create environments in the software directory
    cacheDir = "/hps/software/users/birney/saul/nextflow_software_cache/conda"
}

singularity {
    enabled = true
    // cache images in the software directory
    cacheDir = "/hps/software/users/birney/saul/nextflow_software_cache/singularity"

    // the default is 20 minutes and fails with large images
    pullTimeout = "3 hours"
}



// in order to use lsf use the flag -profile lsf
profiles {

    lsf {
        executor.name = "lsf"

        process {
            // use the short queue as default, if local executor it is just ignored
            queue = {
                if ( task.time > 7.day && task.memory > 300.GB ) {
                    "long_bigmem"
                } else if ( task.memory > 300.GB ) {
                    "bigmem"
                } else if ( task.time > 7.day ) {
                    "long"
                } else if ( task.time > 1.day ) {
                    "research"
                } else {
                    "research"
                }
            }
        }

    }

    slurm {
        executor.name = "slurm"
    }

}

executor {
    // avoid cache invalidation due to lsf timestamps
    queueSize = 2000
    submitRateLimit = "10/1sec"
    exitReadTimeout = "30 min"
    jobName = {
        task.name
            // [] not allowed in lsf job names
            .replace("[", "(")
            .replace("]", ")")
            .replace(" ", "_")
    }

}

process {
    // this is to avoid errors for missing files due to shared filesystem latency
    maxRetries = 3
    errorStrategy = { ( task.exitStatus == 0 ) ? "retry" : "terminate" }
    cache = "lenient"
    afterScript = "sleep 60" // to avoid fail when using storeDir for missing output

    withLabel:process_gpu {
        queue = "gpu-a100"
        clusterOptions = { "-gpu \"num=1:gmem=${task.ext.gmem}\"" }
    }
}

tower {
  enabled = true
}
